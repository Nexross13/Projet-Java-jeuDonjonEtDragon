<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <help_text/>
  <zoom_level>2</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>898</x>
      <y>518</y>
      <w>52</w>
      <h>116</h>
    </coordinates>
    <panel_attributes>Package: protagoniste
PERSONNAGE extends ETRE VIVANT
--
-nom: String
-nbrPO: int
-bataille Bataille
-donjon Donjon
-inventaire Inventaire
-statsInitiale [] int
-degatReduit: int 
-cleSortie: boolean 
-joueurMort: boolean
--
+Personnage(nom: String )
+getInventaire(): Inventaire
+getNom(): String
+getNbrPO(): int
+setNbrPO(po: int): void
+getProtection(): int 
+getBataille(): Bataille
+setBataille(bataille : Bataille): void
+getDonjon(): Donjon
+getJoueurMort(): boolean
+setJoueurMort(boolean bool): void
+setPvInit(pvMax: int): void
+setDegatInit(degat: int): void
+setPAInit(pa:int): void
+setCleSortie(boolean cleSortie): void
+getCleSortie(): boolean
+setDegaReduit(protection: int): void
+getStatsInitiale(): int[]
+rejointDonjon(Donjon donjon): String
+rejointBataille(Bataille bataille): String
+subirAttaque(degat: int): String
+mourir(): void
+gagnerPO(monstre: Monstre): String
+achatItem(cout: int ): String








</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>560</y>
      <w>42</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;EtreVivant&gt;&gt;
Package::protagonistes
--
#pvMax: int
#pvActuel: int
#force: int
--
+EtreVivant(pvMax: int, force: int): 
+getPvMax(): int
+getPvActuel(): int
+getForce(): int
+setForce(force: int): void
+setPvActuel(pvActue: int): void
+setPvMax(pvMax: int): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>976</x>
      <y>606</y>
      <w>54</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Monstre&gt;&gt;
Package::protagonistes
extends EtreVIvant
--
#type: TypeMonstre
#gainPO: int
--
+Monstre(pvMax: int, force: int, gainPO: int): 
+getType(): TypeMonstre
+getGainPO(): int
+attaquer(personnage: Personnage): String
+subirAttaque(degat: int): String
+mourir(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>916</x>
      <y>650</y>
      <w>54</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreFacile&gt;&gt;
Package::protagonistes
extends Monstre
--
-poBorne: int[] 
-pvBorne: int[] 
-forceBorne: int[] 
-type: TypeMonstre 
--
+MonstreFacile(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>950</x>
      <y>692</y>
      <w>52</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreIntermediaire&gt;&gt;
Package::protagonistes
extends Monstre
--
-poBorne: int[] 
-pvBorne: int[] 
-forceBorne: int[] 
-type: TypeMonstre 
--
+MonstreIntermediaire(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1042</x>
      <y>652</y>
      <w>52</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreBoss&gt;&gt;
Package::protagonistes
extends Monstre
--
-type: TypeMonstre 
--
+MonstreBoss(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1004</x>
      <y>692</y>
      <w>52</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreDifficile&gt;&gt;
Package::protagonistes
extends Monstre
--
-poBorne: int[] 
-pvBorne: int[] 
-forceBorne: int[] 
-type: TypeMonstre 
--
+MonstreDifficile(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>842</x>
      <y>356</y>
      <w>28</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: Cardinalite&gt;&gt;
Package::terrain
--
+NORD,
+NORD_EST,
+EST,
+SUD_EST,
+SUD,
+SUD_OUEST,
+OUEST,
+NORD_OUEST
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>890</x>
      <y>440</y>
      <w>72</w>
      <h>74</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Donjon&gt;&gt;
Package::terrain
--
-labyrintheActuel: Piece[] 
-labyrintheModele: String[] 
-cardinaliteImpossiblesLab: Cardinalite[] 
-positionJoueur: int 
-anciennePosition: int 
-etage: int 
-joueur: Personnage
--
+Donjon(personnage: Personnage)
+getEtage(): int 
+getLabyrintheActuel(): Piece[] 
+getPositionJoueur(): int
+setPositionJoueur(posi: int): void
+getAnciennePosition(): int 
+getJoueur(): Personnage 
+creerLabyrinthe(): String 
+changerPositionJoueur(deplacement: Cardinalite): boolean 
+personnageFuit(): String 
+enregistrerPiece(monstre: Monstre): String 
+enregistrerPiece(marchant: Marchant): String 
+EtageSup(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>882</x>
      <y>354</y>
      <w>86</w>
      <h>74</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Piece&gt;&gt;
Package::terrain
--
-idPiece: int
-estDecouverte: boolean 
-estFinie: boolean 
-cardinalitesImpossibles: Cardinalite 
-type: TypePiece 
-monstre: Monstre 
-forgeron: Forgeron 
--
+Piece(idPiece: int , cardinalitesImpossibles: Cardinalite , +getIdPiece(): int
+getEstDecouverte(): boolean 
+getEstFinie(): boolean 
+getCardinalitesImpossibles(): Cardinalite 
+getType(): TypePiece
+getMonstre(): Monstre 
+getForgeron(): Forgeron
+getMarchant(): Marchant
+setType(type: TypePiece ): void 
+setEstDecouverte(estDecouverte: boolean ): void 
+setEstFinie(estFinie: boolean ): void 
+setMonstre(monstre: Monstre): void
+setForgeron(forgeron: Forgeron ): void 
+setMarchant(marchant: Marchant): void
 </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>978</x>
      <y>372</y>
      <w>34</w>
      <h>38</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypePiece&gt;&gt;
Package::terrain
--
+HOSTILE_FACILE,
+HOSTILE_INTERMEDIAIRE,
+HOSTILE_DIFFICILE,
+HOSTILE_BOSS,
+MARCHANT,
+TRESOR,
+FORGE,
+ENTREE,
+SORTIE,
+NEUTRE
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>576</y>
      <w>78</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Inventaire&gt;&gt;
Package::inventaire
--
-armuresStock: TypeArmure[] 
-sauvegardeStatsArmure: int[][] 
-arme: TypeArme 
-sauvegardeStatsArme: int 
-potionsStock: ArrayList&lt;TypePotion&gt; 
-proprietaire: Personnage
--
+Inventaire(personnage: Personnage)
+getArmures(i: int ): TypeArmure 
+getArmuresStock(): TypeArmure[] 
+getArme(): TypeArme 
+getPotions(): ArrayList&lt;TypePotion&gt; 
+getSauvegardeArmure(): int[][] 
+getSauvegardeArme(): int 
+ajouterArmure(typeArmure: TypeArmure, position: int ): void 
+ajouterArme(typeArme: TypeArme ): void 
+ajouterPotion(typePotion: TypePotion ): void 
+DetruireArme(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>694</x>
      <y>702</y>
      <w>94</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypeArme&gt;&gt;
Package::item
--
EPEE_COMMUN
EPEE_RARE
EPEE_LEGENDAIRE
-dmgMin: int 
-dmgMax: int 
-dmg: int 
-tempDmg: int 
-nomArme: String 
-prix: int
-durabiliteMax: int
-durabilite: int
--
TypeArme(dmgMin: int , dmgMax: int  , dmg:, tempDmg: int  ,  nomArme: String, prix: int, dirabiliteMax: int)
+randomDMG(): TypeArme 
+getDMG(): int 
+setDMG(): void 
+setDMG(int dmg): void 
+getNomArme(): String 
+getDMGTemp(): int 
+getPrix(): int
+getDurabiliteMax(): int
+getDurabilite(): int
+setDurabilite(durabilite: int): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>794</x>
      <y>700</y>
      <w>104</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypeArmure&gt;&gt;
Package::item
--
CASQUE_COMMUN
CASQUE_RARE
CASQUE_LEGENDAIRE
PLASTRON_COMMUN
PLASTRON_RARE
PLASTRON_LEGENDAIRE
JAMBIERE_COMMUN
JAMBIERE_RARE
JAMBIERE_LEGENDAIRE
BOTTE_COMMUN
BOTTE_RARE
BOTTE_LEGENDAIRE
-rangePV: int 
-rangePA: int 
-tempPV: int 
-tempPA: int 
-nomArmure: String 
-PV: int 
-PA: int
-prix: int
-durabiliteMax: int
-durabilite: int
--
TypeArmure(rangePV: int , rangePA: int , tempPV: int , tempPA: int , nomArmure: String,  prix: int, dirabiliteMax: int )
+getPV(): int 
+getPA(): int 
+getTempPV(): int 
+getTempPA(): int 
+getNomArmure(): String 
+setStats(): void
+setPV(PV: int): void 
+setPA(PA: int): void 
+randomStats(): TypeArmure
+getPrix(): int
+getDurabiliteMax(): int
+getDurabilite(): int
+setDurabilite(durabilite: int): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>626</x>
      <y>700</y>
      <w>60</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypePotion&gt;&gt;
Package::item
--
PETITE_POTION
MAX_POTION
-pourcentSoin: int 
-nomPotion: String 
-prix: int
--
TypePotion(Pourcent_Soin: int , nomPotion: String, prix: int )
+getPourcent_Soin(): int 
+getPourcent_Soin(): int
+getPrix(): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>976</x>
      <y>516</y>
      <w>66</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Bataille&gt;&gt;
Package::affrontement
--
-personnage: Personnage 
-monstre: Monstre
-tour: int 
-personnageContinuer: boolean 
--
+Bataille(personnage: Personnage, monstre: Monstre )
+getPersonnage(): Personnage 
+getMonstre(): Monstre 
+getTour(): int
+setTour(tour: int): void
+getPersonnageContinuer(): boolean
+fuir(): void 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>786</x>
      <y>412</y>
      <w>60</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Forgeron&gt;&gt;
Package::pnj
--
-type: TypePersonnageNonJoueur 
--
+Forgeron(position: int, donjon: Donjon): 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>440</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;&lt;PersonnageNonJoueur &gt;&gt;
Package::pnj
--
#type: TypePersonnageNonJoueur 
#position: int 
#donjon: Donjon 
--
+PersonnageNonJoueur (position: int, donjon: Donjon): 
+getPosition(): int 
+getType(): TypePersonnageNonJoueur 
+getDonjon(): Donjon 

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>480</y>
      <w>54</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypePersonnageNonJoueur&gt;&gt;
Package::pnj
--
MARCHANT
FORGERON

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>926</x>
      <y>512</y>
      <w>6</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>926</x>
      <y>426</y>
      <w>6</w>
      <h>18</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>966</x>
      <y>388</y>
      <w>16</w>
      <h>8</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>60.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>868</x>
      <y>368</y>
      <w>18</w>
      <h>8</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>70.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>948</x>
      <y>534</y>
      <w>32</w>
      <h>8</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>948</x>
      <y>574</y>
      <w>16</w>
      <h>8</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;60.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1016</x>
      <y>556</y>
      <w>6</w>
      <h>54</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>644</y>
      <w>26</w>
      <h>28</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;120.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>974</x>
      <y>644</y>
      <w>30</w>
      <h>52</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;240.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>644</y>
      <w>24</w>
      <h>52</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>100.0;240.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1016</x>
      <y>644</y>
      <w>30</w>
      <h>30</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>130.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>814</x>
      <y>430</y>
      <w>6</w>
      <h>14</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>814</x>
      <y>470</y>
      <w>6</w>
      <h>14</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>868</x>
      <y>604</y>
      <w>34</w>
      <h>8</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>848</x>
      <y>398</y>
      <w>38</w>
      <h>62</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>170.0;10.0;90.0;10.0;90.0;290.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>696</x>
      <y>348</y>
      <w>82</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Marchant&gt;&gt;
Package::pnj
--
-nbProduitAVendre: int
-type: TypePersonnageNonJoueur 
-stockArme: TypeArme[]
-stockStatArme: int[]
-stockArmure: TypeArmure[]
-stockStatsArmure: int[][]
-stockPotion: TypePotion[] 
-infoTypeDansChoix: String[] 
-productionProduit: boolean 
-nbProduitRestant: int
--
+Marchant(position: int, donjon: Donjon): 
+getNbProduitRestant(): int
+setNbProduitRestant(nbProduitRestant: int ): void
+getStockArmure(): TypeArmure[] 
+setStockArmure(typeArmure: TypeArmure, position: int): void
+getStockArme(): TypeArme[]
+setStockArme(typeArme: TypeArme, position: int): void
+getStockStatArme(): int[]
+setStockStatArme(dmg: int, position: int): void
+getStockPotion(): TypePotion[] 
+setStockPotion(typePotion: TypePotion, position: int): void
+getInfoTypeDansChoix(): String[]
+setInfoTypeDansChoix(nom: String, position: int): void
+getStockStatsArmure(): int[][]
+setStockStatsArmure(pv: int, posi1: int, posi2: int): void
+getProductionProduit(): boolean 
+getNbProduitAVendre(): int
+setProductionProduit(production: boolean): void


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>738</x>
      <y>448</y>
      <w>50</w>
      <h>14</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0;230.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>776</x>
      <y>522</y>
      <w>108</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MaitreDeDonjon&gt;&gt;
Package::inventaire
--
-joueur: Personnage
-cardinaliteImpossiblesLab: Cardinalite[] 
--
+MaitreDeDonjon(persoCharger: Personnage)
+changerPieceouPosition(posiHori: String, posiVerti: int, typePieceChoisi: int): String
+changerStatsDMGJoueur(dmgPerso: int ): String
+changerStatsPVJoueur(pvActuelPerso: int ,pvMaxPerso: int ): String
+changerStatsPAJoueur(pointArmure: int ): String
+changerPOJoueur(piecedOr: int): String
+ressusciterJoueur(): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>882</x>
      <y>540</y>
      <w>20</w>
      <h>8</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>516</x>
      <y>420</y>
      <w>112</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ControleurForge&gt;&gt;
Package::controleur
--
-forgeron: Forgeron
-donjon: Donjon
-boundaryPerso: BoundaryPerso 
--
+ControleurForge(forgeron: Forgeron, donjon: Donjon , boundaryPerso: BoundaryPerso)
+reparerArmure(armure: TypeArmure): String
+reparerArme(arme: TypeArme): String 
+ameliorerArmure(armure: TypeArmure ): String
+ameliorerArme(arme: TypeArme): String
+verifPO(cout: int ): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>502</x>
      <y>346</y>
      <w>138</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ControleurBataille&gt;&gt;
Package::controleur
--
-bataille: Bataille
-controleurPerso: ControleurPerso
-boundaryPerso: BoundaryPerso
-boundaryTresor: BoundaryTresor
-boundaryBataille BoundaryBataille;
--
+ControleurBataille(bataille: Bataille , controleurPerso: ControleurPerso , controleurTresor: ControleurTresor)
+combat(): String 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>510</x>
      <y>384</y>
      <w>122</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ControleurDonjon&gt;&gt;
Package::controleur
--
-donjon: Donjon
--
+creerDonjon(personnage: Personnage, controleurPerso: ControleurPerso): void
+chargerDonjon(personnage: Personnage, controleurPerso: ControleurPerso): void
+d(): Donjon 
+changerPositionJoueur(deplacement: Cardinalite, boundaryPerso: BoundaryPerso): boolean
+EtageSup(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>464</y>
      <w>156</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ControleurMaitreDonjon&gt;&gt;
Package::controleur
--
-joueur: Personnage
--
+chargerJoueur(ControleurPerso controleurPerso): void
+changerPieceouPosition(posiHori: String, posiVerti: int, typePieceChoisi: int, controleurDonjon: ControleurDonjon): String
+changerStatsDMGJoueur(dmgPerso: int ): String
+changerStatsPVJoueur(pvActuelPerso: int ,pvMaxPerso: int ): String
+changerStatsPAJoueur(pointArmure: int ): String
+changerPOJoueur(piecedOr: int): String
+ressusciterJoueur(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>508</x>
      <y>506</y>
      <w>132</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ControleurMarchant&gt;&gt;
Package::controleur
--
-marchant: Marchant 
-proprietaire: Personnage
-controleurTresor: ControleurTresor 
-boundaryMarchant: BoundaryMarchant
-boundaryPerso: BoundaryPerso
--
+ControleurMarchant(marchant: Marchant, proprietaire: Personnage, boundaryPerso: BoundaryPerso)
+ajouterArmure(typeArmure: TypeArmure , position: int): void
+ajouterArme(typeArme: TypeArme , position: int): void
+ajouterPotion(typePotion: TypePotion, position: int): void
+Produit(): void
+Achat(proprietaire: Personnage , choix: int): String
+verifPO(cout: int ): Boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>482</x>
      <y>556</y>
      <w>182</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ControleurPerso&gt;&gt;
Package::controleur
--
-personnage Personnage
-controleurTresor ControleurTresor
-boundaryTresor BoundaryTresor
-boundaryPerso BoundaryPerso
--
+ControleurPerso()
+creerPerso(nomPersonnage: String): void
+p(): Personnage
+vivant(): boolean
+Produit(): void
+sauvegarder(chemin: String): void
+charger(chemin: String , nomPartie: String, controleurDonjon: ControleurDonjon): void
+chargerStats(): void
+majStatJoueur(): void
+deplacer(cardinalite: String, controleurDonjon: ControleurDonjon, boundaryPerso: BoundaryPerso, controleurTresor: ControleurTresor): boolean
+entreePiece(piece: Piece, controleurTresor: ControleurTresor): String
+actionCombat(numAction: int, boundaryPerso: BoundaryPerso): String
+fuir(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>482</x>
      <y>624</y>
      <w>182</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ControleurTresor&gt;&gt;
Package::controleur
--
+armureRareteAleatoire(chanceCommun: int, chanceRare: int): TypeArmure
+armureTypeAleatoire(casque: TypeArmure , plastron: TypeArmure , jambiere: TypeArmure , botte: ): TypeArmure 
+armeAleatoire(chanceCommun: int, chanceRare: int): TypeArme 
+potionAleatoire(chancePetitPotion: int ): TypePotion 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>282</x>
      <y>350</y>
      <w>166</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryBataille&gt;&gt;
Package::vue
--
-controleur: ControleurBataille
--
+BoundaryBataille(controleur: ControleurBataille)
+combat(bataille: Bataille, controleurPerso: ControleurPerso, boundaryPerso: BoundaryPerso, boundaryTresor: BoundaryTresor)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>374</y>
      <w>68</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryDonjon&gt;&gt;
Package::vue
--
-controleur: ControleurDonjon
--
+BoundaryDonjon(controleur: ControleurDonjon)
+affichageLaby(): void
+affichageLabyMD(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>310</x>
      <y>404</y>
      <w>108</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryForge&gt;&gt;
Package::vue
--
-controleur: ControleurForge
-boundaryPerso: BoundaryPerso
--
+BoundaryForge(controleur: ControleurForge, boundaryPerso:  BoundaryPerso )
+actionEntrer(donjon: Donjon, forgeron: Forgeron): void
+choixEquipement(type: String, donjon: Donjon, forgeron: Forgeron): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>318</x>
      <y>438</y>
      <w>88</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryJeu&gt;&gt;
Package::vue
--
-controleurPerso: ControleurPerso
-controleurDonjon: ControleurDonjon
-boundaryDonjon: BoundaryDonjon
-boundaryPerso: BoundaryPerso
-controleurTresor: ControleurTresor
--
+BoundaryJeu()
+nouvellePartie(repertoire: File, liste String[], chemin String): void
+chargerPartie(repertoire: File, liste: String[] ,chemin: String): void
+supprPartie(repertoire: File, liste: String[], chemin: String): void
+menuPartie(chemin: String): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>328</x>
      <y>486</y>
      <w>64</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryJouer&gt;&gt;
Package::vue
--
-boundaryJeu: BoundaryJeu 
-boundaryMaitreDonjon: BoundaryMaitreDonjon
--
+menu()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>326</x>
      <y>510</y>
      <w>64</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryMaitreDonjon&gt;&gt;
Package::vue
--
-controleurPerso: ControleurPerso
-controleurDonjon: ControleurDonjon
-controleurMaitreDonjon: ControleurMaitreDonjon
-boundaryDonjon: BoundaryDonjon
-boundaryPerso: BoundaryPerso
--
+BoundaryMaitreDonjon()
+menuMaitreDuDonjon(chemin: String): void


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>312</x>
      <y>548</y>
      <w>96</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryMarchant&gt;&gt;
Package::vue
--
-controleur: ControleurMarchant
--
+BoundaryMarchant(controleur ControleurMarchant)
+actionEntrer(donjon: Donjon, marchant: Marchant): void
+afficherPotion(potion: TypePotion, position: int): void
+afficherArme(arme: TypeArme, DMG: int, position: int): void
+afficherArmure(armure: TypeArmure, PV: int, PA: int, position: int): void



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>312</x>
      <y>582</y>
      <w>96</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryPerso&gt;&gt;
Package::vue
--
-controleur: ControleurPerso
--
+BoundaryPerso(controleur: ControleurPerso)
+afficherStatsPersonnage(): void
+afficherDeplacement(boundaryDonjon: BoundaryDonjon, controleurDonjon: ControleurDonjon, controleurTresor: ControleurTresor): void
+phrasePiece(controleurDonjon: ControleurDonjon): void
+afficherInventairePersonnage(): void
+boirePotion(): void
+sEquiperArmure(armure: TypeArmure): String
+sEquiperArme(arme: TypeArme): String
+sEquiperPotion(potion: TypePotion): String




</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>326</x>
      <y>616</y>
      <w>64</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>&lt;&lt;BoundaryTresor&gt;&gt;
Package::vue
--
-controleur: ControleurTresor 
--
+BoundaryTresor(controleur: ControleurTresor)
+tresor(controleurPerso: ControleurPerso): void





</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>336</x>
      <y>640</y>
      <w>40</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Clavier&gt;&gt;
Package::vue
--
+entrerClavierInt(): int 
+entrerClavierString(): String 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>660</y>
      <w>44</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Jouer&gt;&gt;
Package::vue
--
+static main(String[] args): void


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>990</x>
      <y>600</y>
      <w>6</w>
      <h>10</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
</diagram>
