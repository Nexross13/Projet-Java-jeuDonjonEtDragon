<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <help_text/>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1312</x>
      <y>656</y>
      <w>224</w>
      <h>512</h>
    </coordinates>
    <panel_attributes>Package: protagoniste
PERSONNAGE extends ETRE VIVANT
--
-nom: String
-nbrPO: int
-bataille Bataille
-donjon Donjon
-inventaire Inventaire
-statsInitiale [] int
-degatReduit: int 
-cleSortie: boolean 
-joueurMort: boolean
-cheminStockage: String 
--
+Personnage(nom: String )
+getNom(): String
+getNbrPO(): int
+getBataille(): Bataille
+getDonjon(): Donjon
+getInventaire(): Inventaire
+getProtection(): int 
+getJoueurMort(): boolean
+setNbrPO(po: int): void
+setPvInit(pvMax: int): void
+setPAInit(degat: int): void
+setDegaReduit(protection: int): void
+setCleSortie(boolean cleSortie): void
+rejointDonjon(Donjon donjon): String
+rejointBataille(Bataille bataille): String
+deplacer(cardinalite: String): boolean
+entreePiece(piece: Piece): String
+attaquer(monstre: Monstre): String
+actionCombat(numAction: int): String
+fuir(): String
+subirAttaque(degat: int): String
+mourir(): void
+sEquiperArmure(armure: TypeArmure): String
+sEquiperArme(arme: TypeArme): String
+sEquiperPotion(potion: TypePotion): String
+boirePotion(): String
+majStatJoueur(): void
+sauvegarder(s: String): void
+charger(s: String): Personnage
+chargerStats(): void
+gagnerPO(monstre: Monstre): String
+achatItem(cout: int ): String








</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1560</x>
      <y>840</y>
      <w>168</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>&lt;&lt;EtreVivant&gt;&gt;
Package::protagonistes
--
#pvMax: int
#pvActuel: int
#force: int
--
+EtreVivant(pvMax: int, force: int): 
+getPvMax(): int
+getPvActuel(): int
+getForce(): int
+setForce(force: int): void
+setPvActuel(pvActue: int): void
+setPvMax(pvMax: int): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1624</x>
      <y>1008</y>
      <w>216</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Monstre&gt;&gt;
Package::protagonistes
extends EtreVIvant
--
#type: TypeMonstre
#gainPO: int
--
+Monstre(pvMax: int, force: int, gainPO: int): 
+getType(): TypeMonstre
+getGainPO(): int
+attaquer(personnage: Personnage): String
+subirAttaque(degat: int): String
+mourir(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1384</x>
      <y>1184</y>
      <w>216</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreFacile&gt;&gt;
Package::protagonistes
extends Monstre
--
-poBorne: int[] 
-pvBorne: int[] 
-forceBorne: int[] 
-type: TypeMonstre 
--
+MonstreFacile(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1520</x>
      <y>1352</y>
      <w>208</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreIntermediaire&gt;&gt;
Package::protagonistes
extends Monstre
--
-poBorne: int[] 
-pvBorne: int[] 
-forceBorne: int[] 
-type: TypeMonstre 
--
+MonstreIntermediaire(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1888</x>
      <y>1192</y>
      <w>208</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreBoss&gt;&gt;
Package::protagonistes
extends Monstre
--
-type: TypeMonstre 
--
+MonstreBoss(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1736</x>
      <y>1352</y>
      <w>208</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MonstreDifficile&gt;&gt;
Package::protagonistes
extends Monstre
--
-poBorne: int[] 
-pvBorne: int[] 
-forceBorne: int[] 
-type: TypeMonstre 
--
+MonstreDifficile(etage: int): 
+getType(): TypeMonstre
+attaquer(personnage: Personnage): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1088</x>
      <y>8</y>
      <w>112</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: Cardinalite&gt;&gt;
Package::terrain
--
+NORD,
+NORD_EST,
+EST,
+SUD_EST,
+SUD,
+SUD_OUEST,
+OUEST,
+NORD_OUEST
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1280</x>
      <y>344</y>
      <w>288</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Donjon&gt;&gt;
Package::terrain
--
-labyrintheActuel: Piece[] 
-labyrintheModele: String[] 
-cardinaliteImpossiblesLab: Cardinalite[] 
-positionJoueur: int 
-anciennePosition: int 
-etage: int 
-joueur: Personnage
--
+Donjon(personnage: Personnage)
+getEtage(): int 
+getLabyrintheActuel(): Piece[] 
+getPositionJoueur(): int
+setPositionJoueur(posi: int): void
+getAnciennePosition(): int 
+getJoueur(): Personnage 
+creerLabyrinthe(): String 
+changerPositionJoueur(deplacement: Cardinalite): boolean 
+personnageFuit(): String 
+enregistrerPiece(monstre: Monstre): String 
+enregistrerPiece(marchant: Marchant): String 
+EtageSup(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1248</x>
      <y>0</y>
      <w>344</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Piece&gt;&gt;
Package::terrain
--
-idPiece: int
-estDecouverte: boolean 
-estFinie: boolean 
-cardinalitesImpossibles: Cardinalite 
-type: TypePiece 
-monstre: Monstre 
-forgeron: Forgeron 
--
+Piece(idPiece: int , cardinalitesImpossibles: Cardinalite , +getIdPiece(): int
+getEstDecouverte(): boolean 
+getEstFinie(): boolean 
+getCardinalitesImpossibles(): Cardinalite 
+getType(): TypePiece
+getMonstre(): Monstre 
+getForgeron(): Forgeron
+getMarchant(): Marchant
+setType(type: TypePiece ): void 
+setEstDecouverte(estDecouverte: boolean ): void 
+setEstFinie(estFinie: boolean ): void 
+setMonstre(monstre: Monstre): void
+setForgeron(forgeron: Forgeron ): void 
+setMarchant(marchant: Marchant): void
 </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1632</x>
      <y>72</y>
      <w>136</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypePiece&gt;&gt;
Package::terrain
--
+HOSTILE_FACILE,
+HOSTILE_INTERMEDIAIRE,
+HOSTILE_DIFFICILE,
+HOSTILE_BOSS,
+MARCHANT,
+TRESOR,
+FORGE,
+ENTREE,
+SORTIE,
+NEUTRE
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>888</x>
      <y>888</y>
      <w>312</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Inventaire&gt;&gt;
Package::inventaire
--
-armuresStock: TypeArmure[] 
-sauvegardeStatsArmure: int[][] 
-arme: TypeArme 
-sauvegardeStatsArme: int 
-potionsStock: ArrayList&lt;TypePotion&gt; 
-proprietaire: Personnage
--
+Inventaire(personnage: Personnage)
+getArmures(i: int ): TypeArmure 
+getArmuresStock(): TypeArmure[] 
+getArme(): TypeArme 
+getPotions(): ArrayList&lt;TypePotion&gt; 
+getSauvegardeArmure(): int[][] 
+getSauvegardeArme(): int 
+ajouterArmure(typeArmure: TypeArmure, position: int ): void 
+ajouterArme(typeArme: TypeArme ): void 
+ajouterPotion(typePotion: TypePotion ): void 
+DetruireArme(): String

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>696</x>
      <y>1208</y>
      <w>536</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Tresor&gt;&gt;
Package::item
--
+armureRareteAleatoire(): TypeArmure 
+armureTypeAleatoire(casque: TypeArmure , plastron: TypeArmure , jambiere: TypeArmure , botte: ): TypeArmure 
+armeAleatoire(): TypeArme 
+potionAleatoire(): TypePotion 
+Tresor(proprietaire: Personnage): void 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>464</x>
      <y>1352</y>
      <w>376</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypeArme&gt;&gt;
Package::item
--
EPEE_COMMUN
EPEE_RARE
EPEE_LEGENDAIRE
-dmgMin: int 
-dmgMax: int 
-dmg: int 
-tempDmg: int 
-nomArme: String 
-prix: int
-durabiliteMax: int
-durabilite: int
--
TypeArme(dmgMin: int , dmgMax: int  , dmg:, tempDmg: int  ,  nomArme: String, prix: int, dirabiliteMax: int)
+randomDMG(): TypeArme 
+getDMG(): int 
+setDMG(): void 
+setDMG(int dmg): void 
+getNomArme(): String 
+getDMGTemp(): int 
+getPrix(): int
+getDurabiliteMax(): int
+getDurabilite(): int
+setDurabilite(durabilite: int): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>1352</y>
      <w>416</w>
      <h>392</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypeArmure&gt;&gt;
Package::item
--
CASQUE_COMMUN
CASQUE_RARE
CASQUE_LEGENDAIRE
PLASTRON_COMMUN
PLASTRON_RARE
PLASTRON_LEGENDAIRE
JAMBIERE_COMMUN
JAMBIERE_RARE
JAMBIERE_LEGENDAIRE
BOTTE_COMMUN
BOTTE_RARE
BOTTE_LEGENDAIRE
-rangePV: int 
-rangePA: int 
-tempPV: int 
-tempPA: int 
-nomArmure: String 
-PV: int 
-PA: int
-prix: int
-durabiliteMax: int
-durabilite: int
--
TypeArmure(rangePV: int , rangePA: int , tempPV: int , tempPA: int , nomArmure: String,  prix: int, dirabiliteMax: int )
+getPV(): int 
+getPA(): int 
+getTempPV(): int 
+getTempPA(): int 
+getNomArmure(): String 
+setStats(): void
+setPV(PV: int): void 
+setPA(PA: int): void 
+randomStats(): TypeArmure
+getPrix(): int
+getDurabiliteMax(): int
+getDurabilite(): int
+setDurabilite(durabilite: int): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>1192</y>
      <w>240</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypePotion&gt;&gt;
Package::item
--
PETITE_POTION
MAX_POTION
-pourcentSoin: int 
-nomPotion: String 
-prix: int
--
TypePotion(Pourcent_Soin: int , nomPotion: String, prix: int )
+getPourcent_Soin(): int 
+getPourcent_Soin(): int
+getPrix(): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1624</x>
      <y>648</y>
      <w>264</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Bataille&gt;&gt;
Package::affrontement
--
-personnage: Personnage 
-monstre: Monstre
-tour: int 
-personnageContinuer: boolean 
--
+Bataille(personnage: Personnage, monstre: Monstre )
+getPersonnage(): Personnage 
+getMonstre(): Monstre 
+combat(): String 
+fuir(): void 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>424</x>
      <y>448</y>
      <w>376</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AffichageForge&gt;&gt;
Package::affichage
--
+actionEntrer(donjon: Donjon, forgeron: Forgeron): void
+choixEquipement(type: String , donjon: Donjon ,  forgeron: Forgeron): void 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>424</x>
      <y>648</y>
      <w>192</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AffichageLab&gt;&gt;
Package::affichage
--
+AffichageLaby(donjon: Donjon): void
+AffichageLabyMD(donjon: Donjon): void



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>424</x>
      <y>536</y>
      <w>312</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AffichagePerso&gt;&gt;
Package::affichage
--
+afficherInventairePersonnage(joueur: Personnage): void
+afficherStatsPersonnage(joueur: Personnage ): void 
+afficherDeplacement(joueur: Personnage, donjon: Donjon): void
+phrasePiece(donjon: Donjon): void



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>424</x>
      <y>720</y>
      <w>160</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Clavier&gt;&gt;
Package::affichage
--
+entrerClavierInt(): int 
+entrerClavierString(): String 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>944</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;testJeu&gt;&gt;
Package::test
--
+main(String[] args)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>368</x>
      <y>840</y>
      <w>296</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;testLab&gt;&gt;
Package::test
--
donjon: Donjon 
personnage: Personnage 
--
+main(personnageChoix: Personnage, donjonChoix: Donjon)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>184</y>
      <w>240</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Forgeron&gt;&gt;
Package::pnj
--
-type: TypePersonnageNonJoueur 
--
+Forgeron(position: int, donjon: Donjon): 
+reparerArmure(armure: TypeArmure): String 
+reparerArme(arme: TypeArme): String 
+ameliorerArmure(armure: TypeArmure): String 
+ameliorerArme(arme: TypeArme): String 
+verifPO(cout: int): boolean 


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>856</x>
      <y>344</y>
      <w>256</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;PersonnageNonJoueur &gt;&gt;
Package::pnj
--
#type: TypePersonnageNonJoueur 
#position: int 
#donjon: Donjon 
--
+PersonnageNonJoueur (position: int, donjon: Donjon): 
+getPosition(): int 
+getType(): TypePersonnageNonJoueur 
+getDonjon(): Donjon 

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>856</x>
      <y>504</y>
      <w>216</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum: TypePersonnageNonJoueur&gt;&gt;
Package::pnj
--
MARCHANT
FORGERON

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1424</x>
      <y>632</y>
      <w>24</w>
      <h>40</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1424</x>
      <y>288</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1584</x>
      <y>136</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>60.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1192</x>
      <y>56</y>
      <w>72</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>70.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1528</x>
      <y>720</y>
      <w>112</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;120.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1528</x>
      <y>880</y>
      <w>48</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;40.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1640</x>
      <y>968</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1784</x>
      <y>808</y>
      <w>24</w>
      <h>216</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1592</x>
      <y>1160</y>
      <w>104</w>
      <h>112</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;120.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1616</x>
      <y>1160</y>
      <w>120</w>
      <h>208</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;240.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1752</x>
      <y>1160</y>
      <w>96</w>
      <h>208</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>100.0;240.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1784</x>
      <y>1160</y>
      <w>120</w>
      <h>120</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>130.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>976</x>
      <y>304</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>976</x>
      <y>464</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1192</x>
      <y>1000</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1096</x>
      <y>1304</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>1304</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>1248</y>
      <w>96</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>100.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>176</y>
      <w>152</w>
      <h>248</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>170.0;10.0;90.0;10.0;90.0;290.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1224</x>
      <y>1160</y>
      <w>120</w>
      <h>120</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>130.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>448</x>
      <y>1016</y>
      <w>128</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;testMaitreDeDonjon&gt;&gt;
Package::test
--
+main(String[] args)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>184</y>
      <w>312</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Marchant&gt;&gt;
Package::pnj
--
-type: TypePersonnageNonJoueur 
--
+Marchant(position: int, donjon: Donjon): 
getNbProduitRestant(): int
ajouterArmure(typeArmure: TypeArmure , position: int): void
ajouterArme(typeArme: TypeArme , position: int): void
ajouterPotion(typePotion: TypePotion, position: int): void
Produit(): void
Achat(proprietaire: Personnage , choix: int): String
verifPO(cout: int ): Boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>344</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;90.0;230.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>824</x>
      <y>672</y>
      <w>432</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MaitreDeDonjon&gt;&gt;
Package::inventaire
--
-joueur: Personnage
-cardinaliteImpossiblesLab: Cardinalite[] 
--
+MaitreDeDonjon(persoCharger: Personnage)
+changerPieceouPosition(posiHori: String, posiVerti: int, typePieceChoisi: int): String
+changerStatsDMGJoueur(dmgPerso: int ): String
+changerStatsPVJoueur(pvActuelPerso: int ,pvMaxPerso: int ): String
+changerStatsPAJoueur(pointArmure: int ): String
+changerPOJoueur(piecedOr: int): String
+ressusciterJoueur(): String


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1248</x>
      <y>744</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>32</x>
      <y>544</y>
      <w>376</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AffichageMarchant&gt;&gt;
Package::affichage
--
+actionEntrer(donjon: Donjon, forgeron: Forgeron): void
+AfficherPotion(potion: TypePotion, position: int): void
+AfficherArme(arme: TypeArme, DMG: int, position: int): void
+AfficherArmure(armure: TypeArmure, PV: int, PA: int, position: int): void


</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
